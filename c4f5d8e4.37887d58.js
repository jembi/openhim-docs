(window.webpackJsonp=window.webpackJsonp||[]).push([[471],{543:function(e,t,a){"use strict";a.r(t);var n=a(3),r=a(0),l=a.n(r),i=a(706),s=a.n(i),o=a(701),c=a(23),m=a(680),u=a(544),d=a.n(u);const g=[{title:l.a.createElement(l.a.Fragment,null,"About"),imageUrl:"/img/jembi-heal.png",imagePlacement:"left",description:l.a.createElement("div",null,l.a.createElement("p",null,"The OpenHIM allows you to"," ",l.a.createElement("b",null,"secure and view requests to your web service APIs"),". It acts as a reverse proxy to your upstream services and while doing so enables visibility into your service-oriented architecture (SOA) by logging each request and by providing metrics about requests hitting your services. It also provides a central entry point into your SOA and allows you to secure access through mutual TLS or basic-auth."),l.a.createElement("p",null,"The OpenHIM is easy to install and can be easily configured to meet your needs through the administration console. You can also"," ",l.a.createElement("b",null,"extend the OpenHIM to transform or orchestrate requests through the mediator framework.")),l.a.createElement("p",null,"Plus, the OpenHIM is ",l.a.createElement("b",null,"open-source"),"! It is published under the"," ",l.a.createElement("a",{href:"https://tldrlegal.com/license/mozilla-public-license-2.0-(mpl-2)"},"MPL-2.0")," ","and is currently developed and maintained by"," ",l.a.createElement("a",{href:"http://www.jembi.org/"},"Jembi Health Systems"),". It was initially developed in collaboration with"," ",l.a.createElement("a",{href:"http://www.ukzn.ac.za/"},"UKZN"),". Browse the OpenHIM features below or"," ",l.a.createElement("a",{href:"docs/getting-started/prerequisites"},"get started right away.")))},{title:l.a.createElement(l.a.Fragment,null,"Mediators"),imageUrl:"/img/plug-solid.png",imagePlacement:"right",description:l.a.createElement("div",null,l.a.createElement("p",null,"The OpenHIM enables you to extend its functionality so that implementation specific processing may occur. The OpenHIM has first class support for mediators through its mediator framework. This framework enables mediators to communicate with the OpenHIM-core to register themselves, log the processing that they do and even fetch user defined config."),l.a.createElement("p",null,"Check out the ",l.a.createElement("a",{href:"mediator-library"},"mediator library")," to view mediators that have already been built. To learn more about creating your own mediators, see our"," ",l.a.createElement("a",{href:"docs/introduction/welcome"},"documentation"),"."))},{title:l.a.createElement(l.a.Fragment,null,"Acts as a reverse proxy for web services"),imageUrl:"/img/OpenHIM-reverse-proxy.png",imagePlacement:"left",description:l.a.createElement("div",null,l.a.createElement("p",null,"You can easily configure the OpenHIM to proxy web services to multiple upstream hosts based on a URL pattern. It also supports multicasting requests to multiple different routes."))},{title:l.a.createElement(l.a.Fragment,null,"Gain visibility into your SOA"),imageUrl:"/img/console.gif",imagePlacement:"right",description:l.a.createElement("div",null,l.a.createElement("p",null,"The administration console allows you to view requests as they travel through the system as well as view metrics such as transaction load and error rates."))},{title:l.a.createElement(l.a.Fragment,null,"Extend the OpenHIM's request processing via mediators"),imageUrl:"/img/mediators.png",imagePlacement:"left",description:l.a.createElement("div",null,l.a.createElement("p",null,"The OpenHIM allows you to build your own micro-services called mediators that plug into the OpenHIM to extend its functionality. These mediators can be used to transform or orchestrate requests or more. They also report details of what processing has been done back to the OpenHIM using the mediator framework."),l.a.createElement("p",{className:"lead justify"},"View our ",l.a.createElement("a",{href:"mediator-library"},"mediator library")," to see mediator have already been built."))},{title:l.a.createElement(l.a.Fragment,null,"Secure access to your web services"),imageUrl:"/img/certs.png",imagePlacement:"right",description:l.a.createElement("div",null,l.a.createElement("p",null,"The OpenHIM provides a secure interface to upstream hosts with certificate management and self signed certificate generation along with advanced access control mechanisms based on client and server certificates."))},{title:l.a.createElement(l.a.Fragment,null,"ATNA: audit repository and node authentication"),imageUrl:"/img/audit.png",imagePlacement:"left",description:l.a.createElement("div",null,l.a.createElement("p",null,"If you need it, full support for IHE\u2019s ATNA profile is provided. Both node authentication and audit trails are supported. The OpenHIM also provides a full ATNA audit repository implementation and advanced audit viewer."))},{title:l.a.createElement(l.a.Fragment,null,"Alerting, for when things go wrong"),imageUrl:"/img/alerts.png",imagePlacement:"right",description:l.a.createElement("div",null,l.a.createElement("p",null,"User alerts can be configured for when requests fail or a particular failure rate is exceeded. Users can be notified via email or sms."))},{title:l.a.createElement(l.a.Fragment,null,"Massively scalable"),imageUrl:"/img/cluster.png",imagePlacement:"left",description:l.a.createElement("div",null,l.a.createElement("p",null,"The OpenHIM is scalable to handle large transaction loads. It supports same server and multi-server clusters and uses MongoDB as a database which is also massively scalable."))},{title:l.a.createElement(l.a.Fragment,null,"Re-run failed transactions"),imageUrl:"/img/rerun.png",imagePlacement:"right",description:l.a.createElement("div",null,l.a.createElement("p",null,"If failures occur the OpenHIM can re-run requests to your services if your client systems are not able to. It allows you to review and bulk re-run requests or re-run individual requests."))},{title:l.a.createElement(l.a.Fragment,null,"Minimal transaction overhead"),imageUrl:"/img/node-mongo.png",imagePlacement:"left",description:l.a.createElement("div",null,l.a.createElement("p",null,"The OpenHIM used the latest technologies such as Node.js and MongoDB to ensure that it doesn\u2019t introduce any significant overhead to your requests."))}];function p({imageUrl:e,title:t,imagePlacement:a,description:n}){const r=Object(m.a)(e);return"left"===a?l.a.createElement("div",{className:"row padding-vert feature even_item"},l.a.createElement("div",{className:"col center"},l.a.createElement("img",{className:"padding-horizontal",src:r,alt:t})),l.a.createElement("div",{className:"col col--offset-1"},l.a.createElement("h2",{className:"subtitle"},t),l.a.createElement("div",null,n))):l.a.createElement("div",{className:"row padding-vert feature even_item"},l.a.createElement("div",{className:"col"},l.a.createElement("h2",{className:"subtitle"},t),l.a.createElement("div",null,n)),l.a.createElement("div",{className:"col col--offset-1 center"},l.a.createElement("img",{className:"padding-horizontal",src:r,alt:t})))}t.default=function(){const e=Object(c.default)(),{siteConfig:t={}}=e;return l.a.createElement(o.a,{title:t.title,description:"Console for administrating the OpenHIM Core",keywords:["OpenHIM","Console"]},l.a.createElement("header",{className:s()("hero page",d.a.heroBanner)},l.a.createElement("div",{className:"container"},l.a.createElement("img",{className:"logo_header",src:"/img/openhim-logo-green.svg",alt:"Project Logo"}),l.a.createElement("p",{className:"hero__subtitle subtitle"},t.tagline),l.a.createElement("div",{className:"container"},l.a.createElement("p",null,"The ",l.a.createElement("strong",null,"Open Health Information Mediator")," (OpenHIM) is a middleware component designed to ease interoperability between disparate information systems. It provides secure communications and data governance as well as support for routing, orchestrating and translating requests as they flow between systems."),l.a.createElement("p",null,"Connecting health systems simply, securely and safely.")))),l.a.createElement("main",null,g&&g.length&&l.a.createElement("div",{className:"home page"},g.map(((e,t)=>l.a.createElement(p,Object(n.a)({key:t},e)))))))}}}]);